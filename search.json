[{"title":"Python入门笔记1（数据类型及相关操作）","url":"/2023/11/12/Python%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E5%A4%84%E7%90%86/","content":"","tags":["Python入门"]},{"title":"Python入门笔记1","url":"/2023/11/15/Python%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/","content":"Python简介Python的起源和发展Python是一种高级编程语言，它的起源可以追溯到上世纪90年代初。Python的创造者是Guido van Rossum，他在1989年开始着手开发这门语言，并于1991年发布了它的第一个版本。\n起初，Guido van Rossum设计Python的初衷是创建一种易于阅读和编写的编程语言，强调代码的简洁性和可读性。他希望Python成为一门功能强大且易用的语言，适用于各种应用场景。\nPython的发展历经了几个重要的版本更新。1994年发布的Python 1.0引入了很多语言特性，如模块化和异常处理。随着时间的推移，Python逐渐成为一种广泛使用的编程语言，并在不同领域得到应用。\n2000年发布的Python 2.0引入了一些重要的改进和新特性，如列表推导式、垃圾回收机制和内存管理的改进。Python 2.x系列在接下来的十多年中广泛使用，同时也推动了Python在业界的普及。\n然而，Python的发展并没有止步于此。为了改进语言的一些缺点和限制，Guido van Rossum领导的Python社区于2008年发布了Python 3.0，该版本引入了一系列重要的改变和向后不兼容的特性。Python 3.x系列逐渐取代了Python 2.x，并成为目前主流的Python版本。\nPython的发展也得益于广泛的社区支持和包括科学计算、Web开发、人工智能和数据分析等领域的丰富库和框架。今天，Python已经成为一种多功能、简洁易读的编程语言，受到了全球开发者和科研人员的欢迎和广泛应用。\nPython的特点和优势Python是一种高级编程语言，具有以下特点和优势：\n\n简洁易读：Python代码以简洁的语法编写，易于理解和阅读，使开发过程更高效。它强调代码的可读性，使得团队合作变得更加容易。\n\n跨平台性：Python可以在多个操作系统上运行，包括Windows、Mac和Linux等。这使得开发人员可以在不同的平台上开发和运行他们的应用程序。\n\n大量的库和框架：Python拥有一个庞大的第三方库和框架生态系统，如NumPy、Pandas、Django和Flask等，可以满足各种不同领域的开发需求。这些库和框架可以帮助开发人员快速构建功能强大的应用程序。\n\n面向对象编程（OOP）支持：Python支持面向对象编程，这意味着开发人员可以使用类和对象进行代码组织和重用。这种编程方法提高了代码的可维护性，并允许开发人员以更加抽象和模块化的方式思考问题。\n\n强大的社区支持：Python拥有一个庞大而活跃的社区，在全球范围内有大量的开发人员贡献代码、分享经验和解决问题。这使得开发人员能够轻松地获取支持和资源，加速开发过程。\n\n可扩展性：Python可以与其他编程语言（如C&#x2F;C++和Java）进行无缝集成，通过编写扩展模块或使用外部接口，可以扩展Python的功能。\n\n适合初学者：Python对于编程初学者来说是一门友好的语言，语法简单易懂，同时提供了丰富的教学资源和学习资料。\n\n\n综上所述，Python是一种功能强大、易读易写的编程语言，适用于各种应用领域，从数据分析到Web开发，从人工智能到科学计算等。它的特点和优势使得它成为许多开发人员的首选语言。\nPython基础语法注释和代码风格规范Python注释|在代码里偷偷骂甲方在Python中，注释不会影响程序的执行，但是会使代码更易于阅读和理解。\nPython中的注释有单行注释和多行注释。\nPython中单行注释以#开头，例如:\n这是一个注释print(&quot;Hello, World!&quot;)\n\n多行注释用三个单引号&#39;&#39;&#39;或者三个双引号&quot;&quot;&quot;将注释括起来(因为被引号括起是字符串类型的提示，但用户并没有用它来赋值或者输出，所以它是无意义的)，例如：\n这是多行注释这是多行注释这是多行注释&#x27;&#x27;&#x27;print(&quot;Hello, World!&quot;)\n\nPython代码风格|让代码更加优雅能让其他人轻松阅读代码总是一个好主意，采用一种好的代码风格对此有很大帮助。\nPython项目大多都遵循PEP8的风格指南：它推行的编码风格易于阅读、赏心悦目。\n以下是该提案中的核心要点：\n1.缩进，用4个空格，不要用制表符。\n​   4个空格是小缩进(更深嵌套)和大缩进(更易阅读)之间的折中方案。制表符会引起混乱，最好别用。\n2.换行，一行不超过79个字符。\n​   这样换行的小屏阅读体验更好，还便于在大屏显示器上并排阅读多个代码文件。\n3.用空行分隔函数和类，及函数内较大的代码块。4.最好把注释放到单独一行。5.使用文档字符串。6.运算符前后，逗号后要用空格，但不要直接在括号内使用：a = f(1, 2) + g(3, 4)。7.类和函数的命名要一致：按惯例，命 名 类 用 UpperCamelCase， 命 名 函 数 与 方 法 用 lowercase_with_underscores。命名方法中第一个参数总是用 self。8.编写用于国际多语环境的代码时，不要用生僻的编码。Python 默认的 UTF-8 或纯 ASCII 可以胜任 各种情况。9.同理，就算多语阅读、维护代码的可能再小，也不要在标识符中使用非 ASCII 字符。\n变量和数据类型变量Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。\nPython是解释型语言，故会自上而下的解释代码，所以要在执行操作前给变量赋值。\n在 Python 中，变量就是变量，它没有类型，我们所说的”类型”是变量所指的内存中对象的类型。\n等号（&#x3D;）用来给变量赋值。\n等号（&#x3D;）运算符左边是一个变量名,等号（&#x3D;）运算符右边是存储在变量中的值。\nPython允许同时为多个变量赋值。例如：\n```也可以为多个对象指定多个变量。例如：```a, b, c = 1, 2, &quot;hi&quot;\n\nNumber(数字)Python支持 int、float、bool、complex（复数）。\n在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。\n像大多数语言一样，数值类型的赋值和计算都是很直观的。\n内置的 type() 函数可以用来查询变量所指的对象类型。\n&gt;&gt;&gt; a, b, c, d = 20, 5.5, True, 4+3j&gt;&gt;&gt; print(type(a), type(b), type(c), type(d))&lt;class &#39;int&#39;&gt; &lt;class &#39;float&#39;&gt; &lt;class &#39;bool&#39;&gt; &lt;class &#39;complex&#39;&gt;\n注意：Python3 中，bool 是 int 的子类，True 和 False 可以和数字相加， True&#x3D;&#x3D;1、False&#x3D;&#x3D;0 会返回 True，但可以通过 is 来判断类型。\n当你指定一个值时，Number 对象就会被创建：\nvar1 = 1 var2 = 10\n您也可以使用del语句删除一些对象引用。\ndel语句的语法是：del [var1[, var2[,...varN]]]\n数值运算实例5 + 4 # 加法9\\&gt;&gt;&gt; 4.3 - 2 # 减法2.3\\&gt;&gt;&gt; 3 * 7 # 乘法21\\&gt;&gt;&gt; 2 / 4 # 除法，得到一个浮点数0.5\\&gt;&gt;&gt; 2 // 4 # 除法，得到一个整数0\\&gt;&gt;&gt; 17 % 3 # 取余2\\&gt;&gt;&gt; 2 ** 5 # 乘方32\n\n注意：\n1、Python可以同时为多个变量赋值，如a, b &#x3D; 1, 2。\n2、一个变量可以通过赋值指向不同类型的对象。\n3、数值的除法包含两个运算符：**&#x2F;** 返回一个浮点数，**&#x2F;&#x2F;** 返回一个整数。\n4、在混合计算时，Python会把整型转换成为浮点数。\n数值类型实例\n\n\nint\nfloat\ncomplex\n\n\n\n10\n0.0\n3.14j\n\n\n100\n15.20\n45.j\n\n\n-786\n-21.9\n9.322e-36j\n\n\n080\n32.3e+18\n.876j\n\n\n-0490\n-90.\n-.6545+0J\n\n\n-0x260\n-32.54e100\n3e+26J\n\n\n0x69\n70.2E-12\n4.53e-7j\n\n\nPython 还支持复数，复数由实数部分和虚数部分构成，可以用 a + bj，或者 complex(a,b) 表示， 复数的实部 a 和虚部 b 都是浮点型。\n","tags":["Python入门"]}]